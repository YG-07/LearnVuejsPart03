四、各种依赖文件的loader安装和配置 (79-82)
在main.js和webpack.config.js的rules数组中的操作：

1.使用commonJS模块化规范
const {add,mul} = require('./clac.js')
calc.js导出：module.exports={add,mul}

2.使用ES6模块化规范
import * as info from './info.js'
info.js导出：export {name,age,height}

3.依赖css文件,需要loader
require('./css/normal.css')
下载2个loader：
  npm install --save-dev css-loader@2.0.2
  npm install style-loader@0.23.1 --save-dev
配置css样式依赖规则：
//css
      {
        test: /\.css$/,
        use: ['style-loader','css-loader' ]
      },

4.依赖less文件
require('./css/special.less')
  npm install --save-dev less-loader@4.1.0 less
配置：//less
      {
        test: /\.less$/,
        use: [{
          loader: "style-loader" // creates style nodes from JS strings
        }, {
          loader: "css-loader" // translates CSS into CommonJS
        }, {
          loader: "less-loader" // compiles Less to CSS
        }]
      },

5.url小图片依赖
  npm install --save-dev url-loader@1.1.2
如：样式里的：background: url("../img/bg.jpg");
配置//img
      {
        test: /\.(png|jpg|gif|jpeg)$/,
        use: [
          {
            loader: 'url-loader',
            options: {
              //默认:8KB,8192,图片大小bytes
              // 小于limit用url-loader，否则用file-loader,
              // 自动通过32位hash值命名
              limit: 30000,
              //打包输出规范命名，默认变量：文件名，去8位hash值，原后缀
              name:'img/[name].[hash:8].[ext]'
            }
          }
        ]
      },

6.文件依赖，对于大图片、文件的依赖
  npm install --save-dev file-loader@3.0.1

7.将ES6语法转ES5，使用babel,3个东西，打包的js文件就没有ES6语法了
  npm install --save-dev babel-loader@7 babel-core babel-preset-es2015
const {add,mul} = require('./clac.js')
配置：//js语法转换
      {
        test: /\.js$/,
        //exclude排除，不用转换webpack的js文件，include包含
        exclude: /(node_modules|bower_components)/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: ['es2015']
          }
        }
      }
